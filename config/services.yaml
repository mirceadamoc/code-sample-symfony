# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    platform.name: '%env(SERVICE_NAME)%'
    platform.token: '%env(SERVICE_KEY)%'
    platform.base_url: '%env(APP_BASE_URL)%'
    cache_ttl: '%env(CACHE_TTL)%'
    nav.base_url: '%env(NAV_BASE_URL)%'
    nav.user: '%env(NAV_USER)%'
    nav.pass: '%env(NAV_PASS)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Dto,Filter,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Handler\:
        resource: '../src/Handler/'
        lazy: true

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    jms_serializer.unserialize_object_constructor:
        class: App\Component\Serializer\ObjectConstructor

    App\Service\FlowProcessorService:
        calls:
            - [addHandler, ['@App\Handler\Flow\NavHandler']]

    App\Service\EnvironmentService:
        bind:
            $navBaseUrl: '%nav.base_url%'
            $navUser: '%nav.user%'
            $navPass: '%nav.pass%'
        lazy: true

    App\Service\Nav\BaseService:
        arguments:
            $environment: '@App\Service\EnvironmentService'

    #HANDLERS
    App\Handler\Flow\NavHandler:
        bind:
            $host: '' # using soap client from nav service

    Doctrine\ORM\EntityManagerInterface: '@doctrine.orm.entity_manager'
    Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter: '@serializer.name_converter.camel_case_to_snake_case'

    App\Security\PlatformChecker:
        arguments:
            $platform: '%platform.role%'